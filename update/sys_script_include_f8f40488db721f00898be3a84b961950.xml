<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_maog_vtbb.BoardBuilderGroup</api_name>
        <client_callable>false</client_callable>
        <description>Optimizes queries to manage groups of boards</description>
        <name>BoardBuilderGroup</name>
        <script><![CDATA[var BoardBuilderGroup = Class.create();
BoardBuilderGroup.prototype = (function BoardBuilderGroup_proto(s) {
	var p = {};
	var TYPE = p.type = 'BoardBuilderGroup';
	var TABLE = 'x_maog_vtbb_board_builder_group';

	var EXISTS = 1, MATCHED = 2;

	var log = s.log = x_spar2_log.Logger.getLogger(TYPE, gs.getCurrentScopeName());
	var rw = RecordWrapper.setup(p, s, TABLE, 'BBG', log);

	var call = Function.prototype.call;

	s.query = rw.query;

	p.initialize = function initialize(grOrSysId, share) {
		this.set(grOrSysId, share, this);
	};

	// Add a new link between a board builder and a group.
	s.createRecord = function createRecord(bb, group) {
		var bbg = rw.createRecord(function createBbg(gr) {
			gr.setValue('board_builder', bb.getSysId());
			gr.setValue('group', group.getSysId());
		});
		return bbg;
	};

	p.getBoardBuilder = function getBoardBuilder() {
		if (!this.boardBuilder) {
			var bbSysId = this.getGr().getValue('board_builder');
			this.boardBuilder = new BoardBuilder(bbSysId);
		}
		return this.boardBuilder;
	};

	p.getGroup = function getGroup() {
		if (!this.group) {
			var groupSysId = this.getGr().getValue('group');
			this.group = new Group(groupSysId);
		}
		return this.group;
	};

	// Create VTBs for this Board Builder Group's eligible owners.
	//
	// Preconditions: Given a Board Builder Group specifying
	//  one Board Builder and one Group that satisfies that
	//  Board Builder's owner group membership conditions
	//  (see BoardBuilder.synchBbgs)
	// Postcondition: There exists one VTB for each
	//  user that is a member of or manager for the group
	//  that satisifes the Board Builder's ownership
	//  conditions.
	// Exception: There may be additional VTBs that used to
	//  meet the preconditions but no longer do.  We do not
	//  delete VTBs.
	//
	p.synchBbgVtbs = function synchBbgVtbs(rebuild) { // 1
		var bb, bbSysId, bbg, bbgSysId, group, groupSysId, once;

		bbg = this;
		bbgSysId = bbg.getSysId();
		bb = bbg.getBoardBuilder();
		bbSysId = bb.getSysId();
		group = bbg.getGroup();
		groupSysId = group.getSysId();
		once = new Once();		

		if (log.isDebugging()) {
			log.debug('{0} synchBbgVtbs{1}', this.toString(), (rebuild ? ' (rebuild)' : ''));
		}

		// Find VTBs that already exist for this board and group.
		VtbBoard.query(function filter(gr) {
			gr.addQuery('assignment_group', group.getSysId());
			gr.addQuery('x_maog_vtbb_builder', bb.getSysId());
		}, function process(vtbGr) {
			var owner = new Owner(vtbGr.owner);
			var key = VtbBoard.makeKey(bbSysId, groupSysId, owner.getSysId());
			var vtb = new VtbBoard(vtbGr);
			if (rebuild) {
				bb.setVtbValues(vtb, group, owner);
				bb.setVtbFilter(vtb, group, owner);
			}
			once.exists(vtb, key);
		});

		// Add new VTBs
		bb.forNewEligibleUsers(group, function addNewVtb(owner) {
			var key = VtbBoard.makeKey(bbSysId, groupSysId, owner.getSysId());
			once.add(null, key, function addBbgBoard() {
				bb.createVtbRecord(group, owner, null);
			});
		}, BoardBuilder.USER_TYPE.OWNERS);
	};

	// Invoked by BR "Board Builder Group Added"
	//
	p.added = function added() {
		if (log.isDebugging) log.debug('{0} record inserted', this.toString());
		this.synchBbgVtbs();
	};
	
	return p;
})(BoardBuilderGroup);  // End BoardBuilderGroup_proto]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>peter.smith</sys_created_by>
        <sys_created_on>2018-06-14 15:39:17</sys_created_on>
        <sys_id>f8f40488db721f00898be3a84b961950</sys_id>
        <sys_mod_count>141</sys_mod_count>
        <sys_name>BoardBuilderGroup</sys_name>
        <sys_package display_value="Visual Task Board Builder" source="x_maog_vtbb">ae48259bdbee9b00898be3a84b9619f7</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Visual Task Board Builder">ae48259bdbee9b00898be3a84b9619f7</sys_scope>
        <sys_update_name>sys_script_include_f8f40488db721f00898be3a84b961950</sys_update_name>
        <sys_updated_by>peter.smith</sys_updated_by>
        <sys_updated_on>2018-07-27 03:00:15</sys_updated_on>
    </sys_script_include>
</record_update>
